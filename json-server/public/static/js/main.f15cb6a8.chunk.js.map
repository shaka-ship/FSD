{"version":3,"sources":["component/LoadingComponent.js","shared/baseurl.js","component/menuComponent.js","component/DishDetailComponent.js","component/HeaderComponent.js","component/ContactComponent.js","component/AboutComponent.js","component/FooterComponent.js","component/HomeComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","component/MainComponent.js","redux/dishes.js","redux/promotions.js","redux/comments.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","to","id","object","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","dishId","rating","author","comment","outline","onClick","isOpen","toggle","onSubmit","htmlFor","md","select","model","show","messages","text","placeholder","validators","minLength","textarea","rows","size","offset","type","color","Component","RenderComments","comments","in","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","transformProps","exitTransform","top","description","DishDetail","Header","toggleNav","handleLogin","isNavOpen","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","width","navbar","innerRef","input","check","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","checkbox","About","RenderLeader","leader","left","body","heading","subheading","designation","leaders","title","list","Footer","RenderCard","item","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leadersLoading","leadersErrMess","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Promotions","Comments","concat","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f15cb6a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className='col-12'>\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React,{Component} from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseurl'\r\n    function RenderMenuItem({dish}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`}>\r\n                    <CardImg object src={baseUrl+dish.image} alt={dish.name}></CardImg>\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className='col-12 col-md-5 m-1'>\r\n                    <RenderMenuItem dish={dish}/>\r\n                </div>\r\n            );\r\n        });\r\n        if(props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>  \r\n                    </div>\r\n                    <div className='row'>\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }    \r\n        \r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport {Card,CardImg,CardBody,CardTitle,CardText, BreadcrumbItem, Breadcrumb,\r\n    Button, Modal, ModalHeader, ModalBody, Label, Row, Col} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, LocalForm, Errors, formReducer } from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseurl';\r\nimport {Fade, FadeTransform, Stagger} from 'react-animation-components';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className='fa fa-pencil fa-lg'></span>Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Make a Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor='rating' md='2'>Rating</Label>\r\n                                <Col >\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                    <Errors    \r\n                                        className='text-danger'\r\n                                        model='.rating'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                        }} \r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md='2'>Author</Label>\r\n                                <Col>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Author\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15) \r\n                                        }}\r\n                                         />\r\n                                    <Errors    \r\n                                        className='text-danger'\r\n                                        model='.author'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two characters',\r\n                                            maxLength: 'Must be less than 15 characters'\r\n                                        }} \r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md='2'>Your Feedback</Label>\r\n                                <Col>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Comment\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if(comments ===null) {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className='col-12 col-md m-1'>\r\n                    <h4>Comments</h4>\r\n                    <ul className='list-unstyled'>\r\n                        <Stagger in>\r\n                            {comments.map(comment => {\r\n                                return (\r\n                                    <Fade in>\r\n                                        <li key='comment.id'>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>--{comment.author}{\", \"}{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                        </li>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment}/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    function RenderDish({dish}) {\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg top src={baseUrl+dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>  \r\n        );\r\n    }\r\n    const DishDetail = (props) => {\r\n        if(props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        \r\n                    </div>\r\n                    <div className='row'>\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    <div className='row'>\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments}\r\n                            postComment = {props.postComment}\r\n                            dishId = {props.dish.id}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default DishDetail;","import React,{Component} from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n            this.toggleModal();\r\n            alert(\"Username: \" + this.username.value + \"Password: \"+ this.password.value+\r\n            \"Remember: \" + this.remember.checked);\r\n            event.preventDefault();\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                            <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className='ml-auto' navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className='fa fa-sign-in fa-lg'></span>Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                            </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor='username'>Username</Label>\r\n                                <Input type='text' id='username' name='username' \r\n                                innerRef={(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor='password'>Password</Label>\r\n                                <Input type='password' id='password' name='password' \r\n                                innerRef={(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type='checkbox' name='remember'\r\n                                    innerRef={(input) => this.remember = input} />Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type='submit' value='submit' color='primary'>Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport {Breadcrumb, BreadcrumbItem,Button, Label, Col, Row } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { baseUrl } from '../shared/baseurl';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div> \r\n                </div>\r\n                    \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                       <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model='feedback' onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15) \r\n                                        }}\r\n                                         />\r\n                                    <Errors    \r\n                                        className='text-danger'\r\n                                        model='.firstname'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two characters',\r\n                                            maxLength: 'Must be less than 15 characters'\r\n                                        }} \r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15) \r\n                                        }}\r\n                                         />\r\n                                    <Errors    \r\n                                        className='text-danger'\r\n                                        model='.lastname'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two characters',\r\n                                            maxLength: 'Must be less than 15 characters'\r\n                                        }} \r\n                                        />     \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15),isNumber \r\n                                        }}\r\n                                         />\r\n                                    <Errors    \r\n                                        className='text-danger'\r\n                                        model='.telnum'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two numbers',\r\n                                            maxLength: 'Must be less than 15 numbers',\r\n                                            isNumber: 'Must be a number'\r\n                                        }} \r\n                                        /> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, validEmail \r\n                                        }}\r\n                                         />\r\n                                    <Errors    \r\n                                        className='text-danger'\r\n                                        model='.email'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Must be a valid email address'\r\n                                        }} \r\n                                        /> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseurl';\nimport { Stagger, Fade} from 'react-animation-components';\nfunction About(props) {\n    function RenderLeader({leader}) {\n        return (\n            <Fade in>\n                <Media>\n                    <Media left className='mr-1'>\n                        <Media object src={baseUrl+leader.image} alt={leader.name} />\n                    </Media>\n                    <Media body>\n                        <Media heading>{leader.name}</Media>\n                        <Media subheading>{leader.designation}</Media>\n                        <Media>{leader.description}</Media>\n                    </Media>\n                </Media>\n            </Fade>\n        );\n    }\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <div className='row'>\n                <RenderLeader leader={leader} />\n            </div>\n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <Stagger in>\n                            {leaders}\n                        </Stagger>\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport {Loading} from './LoadingComponent';\r\nimport {Card, CardImg, CardBody, CardTitle, CardText, CardSubtitle} from 'reactstrap';\r\nimport {baseUrl} from '../shared/baseurl';\r\nimport { FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderCard({item,isLoading,errMess}) {\r\n    if(isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if(errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else if(typeof(item)!== 'undefined') {\r\n        return(\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl+item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n    else return (<div></div>);\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                    isLoading={props.promosLoading}\r\n                    errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leadersLoading}\r\n                    errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseurl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n            dishId: dishId,\r\n            rating: rating,\r\n            author: author,\r\n            comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl+'comments',{\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+response.status+': '+response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post comments', error.message)\r\n        alert('Your comment could not be posted\\nError: '+error.message)});    \r\n}\r\nexport const fetchDishes = () => (dispatch) => {\r\n     dispatch(dishesLoading(true));\r\n\r\n     return fetch(baseUrl + 'dishes')\r\n     .then(response => {\r\n         if(response.ok) {\r\n             return response;\r\n         }\r\n         else {\r\n             var error = new Error('Error '+response.status+': '+response.statusText);\r\n             error.response = response;\r\n             throw error;\r\n         }\r\n     },\r\n     error => {\r\n         var errmess = new Error(error.message);\r\n         throw errmess;\r\n     })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () =>({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+response.status+': '+response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n       .then(response => response.json())\r\n       .then(comments => dispatch(addComments(comments)))\r\n       .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+response.status+': '+response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n       .then(response => response.json())\r\n       .then(promos => dispatch(addPromos(promos)))\r\n       .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () =>({\r\n   type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n   type: ActionTypes.PROMOS_FAILED,\r\n   payload: errmess\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+response.status+': '+response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n       .then(response => response.json())\r\n       .then(leaders => dispatch(addLeaders(leaders)))\r\n       .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () =>({\r\n   type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n   type: ActionTypes.LEADERS_FAILED,\r\n   payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n   type: ActionTypes.ADD_PROMOS,\r\n   payload: promos\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n });\r\n\r\n export const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        contactType: contactType,\r\n        message: message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl+'feedback',{\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+response.status+': '+response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error => { console.log('Post feedback', error.message)\r\n        alert('Your feedback could not be posted\\nError: '+error.message)});    \r\n}","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport Menu from './menuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { postComment, fetchDishes,fetchComments, fetchPromos, fetchLeaders,postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nconst mapStateToProps = state => {\r\n   return {\r\n     dishes: state.dishes,\r\n     comments: state.comments,\r\n     promotions: state.promotions,\r\n     leaders: state.leaders\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch\r\n    (postComment(dishId, rating, author, comment)),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch\r\n    (postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    fetchDishes: () => {dispatch(fetchDishes())},\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n    fetchComments: () => {dispatch(fetchComments())},\r\n    fetchPromos: () => {dispatch(fetchPromos())},\r\n    fetchLeaders: () => {dispatch(fetchLeaders())}\r\n});\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }  \r\n  \r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  render() {\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            dishesLoading={this.props.dishes.dishesLoading}\r\n            dishesErrMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} \r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n            />\r\n      );\r\n    };\r\n    const HomePage = () => {\r\n        return(\r\n            <Home \r\n                dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                dishesLoading={this.props.dishes.dishesLoading}\r\n                dishesErrMess={this.props.dishes.errMess}\r\n                promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                promosLoading={this.props.promotions.promosLoading}\r\n                promosErrMess={this.props.promotions.errMess}\r\n                leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                leadersLoading={this.props.leaders.leadersLoading}\r\n                leadersErrMess={this.props.leaders.errMess}\r\n            />\r\n        );\r\n      };\r\n    return (\r\n    <div className=\"App\">\r\n        <Header />\r\n            <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n              <Route exact path='/contactus' component={() => <Contact \r\n                resetFeedbackForm={this.props.resetFeedbackForm} \r\n                postFeedback={this.props.postFeedback} \r\n              />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n        <Footer/>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []},action) => {\r\n        switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess:null, dishes: []};\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: null,\r\n    errMess: null,\r\n    promotions: []\r\n    } ,action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess:null, promotions: []};\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n},action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n        \r\n            case ActionTypes.COMMENTS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n            \r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            comment.id = state.comments.length;\r\n            return {...state,comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: null,\r\n    errMess: null,\r\n    leaders: []\r\n    } ,action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess:null, leaders: []};\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, {Component} from 'react';\nimport Main from './component/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Promotions } from './promotions';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}